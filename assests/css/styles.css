/*Primero seleccionamos la etiqueta raíz y definimos una serie de variables*/
:root {
  --color-principal: #0f4c75;
  --color-secundario: #3282b8;
  --color-titulos: #1b262c;
  --color-terciario: #bbe1fa;
  --color-transparent: transparent;
  --color-subtitle: #32323280;
  --color-texto: ##222831;
  --color-background: #f2f7f9;
  --color-background-contact: #fcfcfc;
}

/*Estilos generales*/

html {
  font-size: 10px; /*esto lo hago para luego poder definir los REM como unidades de medida. Según este criterio, 1 REM serían 10px*/
}

body {
  width: 100%; /*para que siempre el body ocupe el 100% de la página*/
  height: 100%;
  background-color: var(--color-background);
  font-size: 1.5rem;
  font-family: "Poppins", Helvetica, sans-serif;
  color: var(--color-texto);
  overflow: hidden; /*evitas el scroll*/
  /*imágen de fondo*/
  background: var(--color-background);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--color-subtitle);
}

/*Layout o estructura pcpal*/

.layout {
  position: relative;
  min-width: 1290px; /*en este caso usamos px y no rem, para que la estructura de la web se mantenga siempre con 1290 y no 
  esté en función de otros parámetros*/
  width: 75%;
  height: 80vh;
  min-height: 80vh;
  margin: 10vh auto;
  display: grid;
  grid-template-areas: "aside content"; /*explico las áreas que habrá en el contenido*/
  grid-template-columns: 30% 70%; /*como he definido aside y content, defino 30% a aside y 70% a content*/
  /*ahora aplico la sombra detrás del layout*/
  border-radius: 4rem;
  box-shadow: 0 0 100px -5px rgb(0, 0, 0, 0.2); /*aquí tp quiero que cambie px por rem, porque quiero que siempre sea ese tamaño*/
}

/*barra lateral azul*/
.layout__aside {
  grid-area: aside; /*xq se vza a vincular con el aside definido anteriormente en grid template areas.*/
  border-radius: 4rem 0 0 4rem;
  overflow: auto;
  overflow-x: hidden; /*oculta lo que sobresale del eje x. Los overflows hidden ocultan lo que sobresale*/
}

.aside__user-info {
  display: flex;
  flex-direction: column;
  align-items: center; /*se posicionan al centro los elementos que funcionan como bloque*/
  text-align: center; /*se posiciona al centro los textos. los textos no tienen display flex, por tanto se deben posicionar al centro así*/
  min-height: 100%;
  min-width: 30rem;
  background-color: var(--color-principal);
  color: white;
}

.user-info__container-image {
  position: relative;
  display: inline-block;
  margin-top: 7rem;
  background-color: var(--color-background);
  border: 3px solid var(--color-background);
  border-radius: 20rem;
  overflow: hidden;
}

img {
  height: 25rem;
}

.user-info__name {
  margin-top: 2.6rem;
  font-size: 3.2rem;
  font-weight: normal;
  color: var(--color-background);
}

.user-info__job {
  color: var(--color-background);
  font-weight: normal;
  font-size: 1.7rem;
}

.social__option {
  height: 3rem;
  width: 3rem;
  font-size: 1.8rem;
  line-height: 3.2rem;
  opacity: 0.9;
  border-radius: 3rem;
  transition: all 300ms ease-in-out;
}

.social__option:hover {
  opacity: 1;
  background-color: rgba(255, 255, 255, 0.2);
}

.user-info__buttons {
  margin-top: 2rem;
  margin-bottom: 4rem;
}

.user-info__btn {
  padding: 3rem;
  padding-top: 1.3rem;
  padding-bottom: 1.3rem;
  border: 2px solid var(--color-background); /*los elementos estéticos, bordes, sombras, fondos, etc, pueden mantener px en lugar de rem*/
  border-radius: 3.2rem;
  box-shadow: 0 10px 10px -4px rgba(0, 0, 0, 0.22); /*el 0 es el desplazamineto verticval de la sombra, el 10 el vertical, el otro 10 el difuminado
  y el -4 a la extension de la sombra*/
  transition: all 1s ease-in-out;
}

.user-info__btn:hover {
  background-color: var(--color-background);
  color: var(--color-secundario);
}

.user-info__footer {
  position: absolute; /*para que se quede siempre fijo abajo*/
  bottom: 2rem;
  font-size: 1.2rem; /*le quitamos algo de tamaño a la fuente para que no resalte*/
}

.user-info__links {
  margin-bottom: 3.6rem;
}

.links__social {
  text-align: center;
  margin-top: 2rem;
  display: flex;
  flex-direction: row; /*para que se posicionen como fila*/
}

/*contenedor pcpal*/
.layout__content {
  grid-area: content; /*xq se vza a vincular con el content definido anteriormente en grid template areas.*/
  height: 100%;
  min-height: 100%;
  background-color: var(--color-principal);
  border-radius: 0 10rem 10rem 0;
}

.content__page {
  background-color: var(--color-background);
  min-height: 100%;
  border-radius: 3.2rem;
  display: flex;
  flex-direction: column;
  align-items: center; /*los elementos se colocan verticalmente y horizontalmente en el centro con este comando y el siguiente*/
  justify-content: center;
}

.page__name {
  font-size: 6rem;
  margin-bottom: 1rem;
  color: var(--color-texto);
}

.page__job {
  font-size: 2.1rem;
  font-weight: lighter;
  color: var(--color-subtitle);
}

/*Menu navegacion lateral*/
.layout__menu {
  display: block; /*para ocultar provsionalmente ese menu. Luego se mostrará en la parte lateral*/
  position: absolute;
  top: 0; /*con esto lo que consigo es llevarlo al pixel 0 desde arriba*/
  right: -10.5rem; /*lo mismo que antes, lo posiciono arriba y en el lado derecho*/
  min-width: 11rem;
  background-color: var(--color-transparent);
}

.menu__list {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 60%;
  min-height: 32rem;
  padding: 2rem 0;
  margin-left: 2.5rem; /*para acabar de posicionar la barra*/
  background-color: var(--color-background);
  box-shadow: 0 0 3rem -0.5rem rgba(0, 0, 0, 0.15);
  border-radius: 5rem;
}

.menu__option {
  display: block;
  width: 100%;
  text-align: center;
}

.menu__icon {
  color: var(--color-principal);
  font-size: 2.8rem;
  transition: all 500ms ease-in-out;
}

.menu__option:hover .menu__icon,
.menu__link--active .menu__icon {
  color: #f0b38a94; /*.menu__link--active, menu__icon esto lo pongo para que cuando esté en la página en cuestión
  el icono se quede resaltado. Lo explico tb como comentario en el html*/
}

.menu__overlay {
  /*opacity: 0; para ocultar los textos del menu lateral. Luego voy a comentar toda la línea para que sepas que esto lo tienes que hacer cuando no quieras verlo
  para que te deje maquetar correctamente. Luego lo cambias*/
  /*display: none; esto lo hago para maquetar primero los iconos tranquilamente y luego hacemos los overlay
  Luego voy a comentar toda la línea para que sepas que esto lo tienes que hacer cuando no quieras verlo
  para que te deje maquetar correctamente. Luego lo cambias*/
  display: block; /*Ahora si que le pongo ya el display block*/
  position: absolute;
  right: 0; /*se me coloca el texto a la derecha al pixel 0 de la caja que lo contiene*/
  margin-top: -3rem; /*con esto lo textos se quedarían tapando los iconos, para poder conseguir finalmente lo que busco*/
  opacity: 0; /*de esta manera no veo los textos, y cuando haga el hover se lo pongo a 1 para que aparezcan*/
  padding: 0.5rem 1rem;
  color: var(--color-background);
  background-color: var(--color-secundario);
  white-space: nowrap; /*Para que no haya salto de línea en los textos*/
  border-radius: 1rem;
  transition: all 300ms ease-in-out;
}

.menu__option:hover .menu__overlay {
  opacity: 1;
  right: 100%; /*para que, en lugar de estar en el pixel 0, esté totalmente a la izquierda con respecto al contenedor*/
}

/*Estilos generales Sobre mi y otras páginas*/

.content__about,
.content__resume,
.content__portfolio,
.content__contact {
  display: block;
  height: 100%;
  min-height: 100%;
  overflow: auto; /*de esta manera consigues que haya un scroll ya dentro*/
  padding: 6rem;
  padding-right: 3rem;
}

.about__header,
.resume__header,
.portfolio__header,
.contact__header {
  margin-bottom: 3rem;
}

.about__title,
.resume__title,
.portfolio__title,
.contact__title {
  font-size: 3.2rem;
  position: relative;
}

.about__title::after {
  /*con el pseudoelemento after, lo que haces es agregar contenido después del about title*/
  content: "";
  position: absolute;
}

.title__color,
.subtitle__color {
  color: var(--color-principal);
}

/*personal info*/

.about__personal-info {
  display: flex;
  flex-direction: row;
  width: 100%;
  margin-bottom: 5rem;
}

.personal-info__bio {
  flex-basis: 56%;
}

.personal-info__description {
  font-size: 1.5rem;
  line-height: 2.4rem;
  text-align: justify;
}

.personal-info__data {
  flex-basis: 44%;
  padding: 0 3.5rem;
}

.personal-info__option {
  margin-bottom: 1rem;
}

.personal-info__title {
  margin-right: 0.5rem;
  color: var(--color-principal);
  font-weight: 600;
}

/*maquetando los about y otras secciones*/

.about__services,
.about__faq {
  width: 100%;
  margin-bottom: 3rem;
}

.services__header,
.faq__header,
.resume__subheader,
.contact__form-header {
  display: inline-block;
  padding-right: 1.2rem;
  margin-bottom: 2.5rem;
  position: relative;
}

.service__title,
.faq__title,
.resume__subtitle,
.form-header__title {
  font-size: 2.1rem;
}

.services__container {
  width: 100%;
  display: flex;
  flex-direction: row; /*se distribuyen en una fila*/
  flex-wrap: wrap; /*además de distribuirse en una fila, con wrap haces que se puedan distribuir en varias líneas en cada fila
  de lo contrario, todo el contenido iría en una sola fila y eso no es lo que quiero. Para eso tb se le aplica en la siguiente clase, services__service una anchura del 50%
  para indicarle la anchura de cada uno*/
}

.services__service {
  flex-basis: calc(
    50% - 3rem
  ); /*si dejara 50%, como abajo le estoy dando margin right de 3 rem, se me pondrian en columnas
  porque ocuparía más del 50% cada uno y no podrían ponerse en la misma fila. Por ello uso calc y le resto al 50% los 3 rem del margin*/
  margin-right: 3rem;
  margin-bottom: 2.5rem;
}

.service__real-icon {
  color: var(--color-principal);
  font-size: 3.8rem;
}

.services__title {
  font-size: 2.2rem;
}

.service__title {
  font-size: 1.8rem;
  margin: 0.5rem 0;
}

.service__description {
  font-size: 1.5rem;
  text-align: justify; /*de esta forma, los textos se queda alineados*/
}

/*faq*/
/*el about__faq y el faq__header, faq__title los comparto con los de los servicios que son los anteriores y si subo un poco los veré*/
/*voy a intentar hacer un flip rotate. esto está fuera del curso. En el curso yo sustituyo faq por sus reseñas
, pero además intento aplicar un flip rotate*/

.faq__container {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.faq__card {
  flex-basis: 32%;
  width: 100%;
  margin-bottom: 2.5rem;
  perspective: 100rem;
  height: 25rem;
  border-radius: 1rem;
}

.card__iner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.8s;
  transform-style: preserve-3d;
  border-radius: 1rem;
  box-shadow: 0 1rem 1rem -0.5rem rgba(0, 0, 0, 0.25); /*el primer valor es desplazamiento en x, el segundo en y, el 3º difuminado, el 4º es
  que no quiero que se note tanto lo que hago es difuminarla más con el -0.5, pero este es opcional y luego el color, que en este
  caso he puesto un gris con transparencia*/
}

.faq__card:hover .card__iner {
  transform: rotateY(-180deg);
}

.card__front,
.card__back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(to bottom right, #f0b38a63, #0f4c7585);
  border-radius: 1rem;
}

.card__back {
  background: linear-gradient(to bottom right);
  border-radius: 1rem;
  transform: rotateY(180deg);
  height: 100%;
}

.faq__question {
  margin-left: 1rem;
  margin-right: 1rem;
  text-align: center;
}

.faq__answer {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: justify;
}

/*estilos para curriculum*/

/*Parte izquierda*/

.resume__container {
  width: 100%;
  display: flex;
  flex-direction: row;
}

.resume__left {
  flex-basis: 58%;
  margin-right: 1.5rem;
}

.resume__timelines {
  margin-bottom: 5rem;
}

.timelines__timeline {
  position: relative;
  width: 100%;
  margin-bottom: 1.5rem;
  display: flex; /*para que los elementos funcionen como una row*/
  flex-direction: row;
}

.timeline__header {
  flex-basis: 30%;
  text-align: right;
  padding-right: 2.5rem;
}

.timeline__year {
  margin: 0.3rem 0;
  line-height: 1.9rem;
  font-size: 1.4rem;
}

.timeline__company {
  display: block; /*como es un span, pongo display block para poder manipularlo*/
  margin: 0;
  font-size: 1.3rem;
  font-weight: lighter;
  color: var(--color-subtitle);
}

.timeline__description {
  width: 70%;
  padding-left: 2.5rem;
  padding-right: 1.5rem;
}

.timeline__title {
  font-size: 1.6rem;
  margin-bottom: 0.3rem;
}

.timeline__text {
  font-size: 1.4rem;
  margin-bottom: 1rem;
}

.timeline__divider {
  position: absolute;
  top: 0;
  left: 30%;
  bottom: -1.8rem; /*este bottom y left y top 0 y position absolute es para que la linea que separa el año y la compañia con el puesto y el texto, sea continua. 
  Antes sólo cubría el ancho de cada caja, pero ahora yo quiero que cubra todo el ancho desde la primera formación hasta la última
  Al combinar la propiedad top y bottom de esta manera, verás que la línea supera la anchura de la caja que la contiene, que era el propósito.
  Le decimos que empiece en top 0, es decir, al principio, y que acabe en bottom -1.8rem
  Como no he indicado ninguna altura,. lo puedo hacer.
  Si hubiera fijado la altura con height, no podría haberlo hecho
  Cuando la posicion es relativa, puedes usar propiedades como top, right, bottom, etc, para desplazar el elemento respecto a su posición normal.*/
  width: 0.1rem;
  background-color: rgba(128, 128, 128, 0.11);
}

.timeline__divider::before {
  /*pseudoelementos para hacer el circulo divisorio. realmente esto tp es tan necesario.
  Esto sería para hacer el círculo de fuera que es mas grande*/
  content: "";
  position: absolute;
  margin-top: 0.4rem; /*para mover la bola un poco hacia abajo*/
  margin-left: -0.8rem; /*para mover la bola un poco hacia el centro*/
  opacity: 0.25;
  width: 1.7rem;
  height: 1.7rem;
  background-color: var(--color-secundario);
  border-radius: 10rem;
}

.timeline__divider::after {
  /*pseudoelementos para hacer el circulo divisorio. realmente esto tp es tan necesario
  Esto sería para hacer los círculos de dentro*/
  content: "";
  position: absolute;
  margin-top: 0.8rem; /*para mover la bola un poco hacia abajo*/
  margin-left: -0.45rem; /*para mover la bola un poco hacia el centro*/
  width: 0.9rem;
  height: 0.9rem;
  background-color: var(--color-principal);
  border: 0.2rem solid var(--color-secundario);
  border-radius: 10rem;
  opacity: 1;
}

/*Parte derecha*/

.resume__right {
  flex-basis: 41%;
  pad: 0 1.5rem;
}

.resume__skills {
  width: 100%;
  margin-bottom: 3rem;
}

.skills__title {
  display: flex;
  justify-content: space-between;
}

.skills__text {
  font-size: 1.3rem;
  line-height: 1.4rem;
  margin-bottom: 0.4rem;
}

.skills__number {
  font-size: 1.1rem;
  line-height: 1.4rem;
  margin-bottom: 0.4rem;
  color: var(--color-subtitle);
}

.skills__progressbar {
  height: 1rem;
  border: 0.1rem solid var(--color-secundario);
  border-radius: 1rem;
  background-color: white;
  margin-bottom: 1.5rem;
}

.skills__percentage {
  width: 40%;
  background-color: var(--color-secundario);
  border: 0.2rem solid var(--color-terciario);
  height: 0.8rem;
  border-radius: 1rem;
}

.skills__percentage--p1 {
  width: 90%;
}
.skills__percentage--p2 {
  width: 50%;
}
.skills__percentage--p3 {
  width: 60%;
}
.skills__percentage--p4 {
  width: 60%;
}
.skills__percentage--p5 {
  width: 60%;
}
.skills__percentage--p6 {
  width: 60%;
}
.skills__percentage--p7 {
  width: 80%;
}
.skills__percentage--p8 {
  width: 40%;
}

.knowledges__list {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.knowledges__option {
  padding: 0.4rem 1rem;
  margin: 0.3rem;
  font-size: 1.3rem;
  background-color: var(--color-secundario);
  border-radius: 0.3rem;
  color: var(--color-background);
}

/*portfolio*/

.portfolio__navbar {
  margin-bottom: 3rem;
}

.portfolio__menu {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1.5rem;
}

.portfolio__option {
  font-size: 1.3rem;
  opacity: 0.7;
}

.portfolio__option--active {
  opacity: 1;
}

.portfolio__link {
  cursor: pointer;
}

.portfolio__link:hover {
  color: var(--color-principal);
  text-shadow: 0 0 0.1rem rgba(0, 0, 0, 0.658);
}

.portfolio__gallery {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.gallery__item {
  position: relative;
  flex-basis: 45%;
  padding: 0.7rem;
}

.gallery__container--image {
  overflow: hidden;
}

.gallery__image {
  transition: all 500ms ease-in-out;
}

.gallery__item:hover .gallery__image {
  transform: scale(1.1);
}

.gallery__title {
  font-size: 1.6rem;
  padding: 1.5rem 0;
  font-weight: 600;
}

.gallery__icon {
  opacity: 0;
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  width: 3rem;
  height: 3rem;
  font-size: 1.6rem;
  text-align: center;
  line-height: 3rem;
  background-color: var(--color-background);
  color: var(--color-principal);
  transition: all 1s ease-in-out;
}

.gallery__category {
  opacity: 0;
  position: absolute;
  top: 1.5rem;
  left: 1.5rem;
  padding: 0.2rem 0.7rem;
  font-size: 1.1rem;
  background-color: var(--color-background);
  color: var(--color-principal);
  transition: all 1s ease-in-out;
}

.gallery__item:hover .gallery__icon,
.gallery__item:hover .gallery__category {
  opacity: 1;
}

/*contacto*/

.contact__container {
  display: flex;
  flex-direction: row;
}

.contact__info {
  flex-basis: 33%;
  padding: 0 1.5rem;
}


.contact__icon{
  font-size: 3.3rem;
  color: var(--color-secundario);
}

.contact__subtitle{
  font-size: 1.5rem;
  margin-top: 1rem;
}

.contact__data {
  width: 100%;
  margin-bottom: 1.5rem;
  padding: 2rem 1rem;
  text-align: center;
  background-color: rgba(128, 128, 128, 0.021);
  border: 0.1rem solid rgba(128, 128, 128, 0.274);
}

.contact__form-box {
  flex-basis: 66%;
  padding: 0 1.5rem;
}

.form__container{
  display: flex;
  flex-direction: row;
}

.form__left{
  flex-basis: 47%;
  margin-right: 1.5rem;
}

.form__group{
  position: relative;
  margin-bottom: 2.5rem;
}

.form__input{
  position: relative;
  width: 100%;
  height: 4.2rem;
  display: block;
  border: 0.2rem solid rgba(128, 128, 128, 0.274);
  border-radius: 0.5rem;
  font-size: 1.5rem;
  padding: 1rem 1.2rem;
  outline: none;
  box-shadow: 0 1rem 1rem -0.8rem rgba(0, 0, 0, 0.10);
  background-color: transparent;
  line-height: 2.1rem;
}


.form__input:focus{
  border: 0.2rem solid var(--color-secundario);
}

.form__label{
  position: absolute;
  top: 1rem;
  left: 1.5rem;
  color: rgba(128, 128, 128, 0.61);
  transition: all 500ms ease-in-out;
  pointer-events: none;
}

.form__input:focus~label,
.form__input:not(:placeholder-shown)~label{/*explicado en el video 91. La virulilla. Selecciona los elementos que son hermanos al form input*/
  top: -2rem;
  left: 0;
  z-index: 1;
  font-size: 1.3rem;
  color: var(--color-principal);
}

.form__input::-webkit-input-placeholder{
  color: transparent;
}

.form__input::-moz-placeholder{
  color: transparent;
}

.form__right{
  flex-basis: 50%;
  max-width: 50%;
  max-height: 100%;
 
}

.form__group--textarea{
  height: 100%;
}

.form__input--textarea{
  display: block;
  resize: none;
  height: 100%;
 
}

.form__button{
  cursor: pointer;
  padding: 1rem 3rem;
  font-size: 1.5rem;
  border: 0.2rem solid var(--color-principal);
  color: var(--color-principal);
  background-color: var(--color-background-contact);
  border-radius: 3rem;
  box-shadow: 0 1rem 1rem -0.8rem rgba(0, 0, 0, 0.22);
  transition: all 1s ease-in-out;
}

.form__button:hover{
  background-color: var(--color-principal);
  color: var(--color-background);

}

.contact__map{
  width: 100%;
  min-height: 15rem;
  margin-bottom: 3.5rem;
  overflow: hidden;
}

.contact__iframe{
  width: 100%;
  height: 14rem;

}

